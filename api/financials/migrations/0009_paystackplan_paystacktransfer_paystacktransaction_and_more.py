# Generated by Django 4.1.4 on 2023-01-23 13:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('bills', '0005_remove_transaction_refundable_alter_action_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('financials', '0008_delete_paystackplan'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaystackPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Public identifier')),
                ('name', models.CharField(max_length=100)),
                ('interval', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('biannually', 'Biannually'), ('annually', 'Annually')], max_length=50)),
                ('plan_code', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=4, max_digits=19, verbose_name='Amount to be paid within each interval')),
                ('complete_paystack_response', models.JSONField()),
                ('action', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paystack_plan', to='bills.action')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paystack_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paystack Plan',
                'verbose_name_plural': 'Paystack Plans',
                'ordering': ['-created', 'user'],
            },
        ),
        migrations.CreateModel(
            name='PaystackTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Public identifier')),
                ('amount', models.DecimalField(decimal_places=4, max_digits=19)),
                ('paystack_transfer_reference', models.UUIDField(editable=False, unique=True, verbose_name='Public identifier')),
                ('transfer_outcome', models.CharField(choices=[('successful', 'Successful'), ('failed', 'Failed'), ('reversed', 'Reversed')], max_length=50)),
                ('transfer_type', models.CharField(choices=[('creditor-settlement', 'Creditor-settlement'), ('card-addition-refund', 'Card-addition-refund')], max_length=50)),
                ('complete_paystack_response', models.JSONField()),
                ('action', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transfers', to='bills.action')),
                ('recieving_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transfers_received', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(help_text='NULL means the recipient who received this transfer has been deleted on Halver. Check full paystack data for recipient details.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transfers_received', to='financials.transferrecipient')),
            ],
            options={
                'verbose_name': 'Paystack Transfer',
                'verbose_name_plural': 'Paystack Transfers',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='PaystackTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Public identifier')),
                ('amount', models.DecimalField(decimal_places=4, max_digits=19)),
                ('transaction_outcome', models.CharField(choices=[('successful', 'Successful'), ('failed', 'Failed')], max_length=50)),
                ('transaction_type', models.CharField(choices=[('participant_payment', 'Participant_payment'), ('card-addition', 'Card-addition')], max_length=50)),
                ('paystack_transaction_id', models.BigIntegerField()),
                ('complete_paystack_response', models.JSONField()),
                ('action', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transactions', to='bills.action')),
                ('card', models.ForeignKey(help_text='NULL means the card used for this transaction has been deleted on Halver. Check full paystack data for card details.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transactions', to='financials.usercard')),
                ('paying_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paystack Transaction',
                'verbose_name_plural': 'Paystack Transactions',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='PaystackSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Public identifier')),
                ('status', models.CharField(choices=[('active', 'Active'), ('non-renewing', 'Non-renewing'), ('attention', 'Attention'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], max_length=50)),
                ('start_date', models.DateTimeField()),
                ('next_payment_date', models.DateTimeField()),
                ('complete_paystack_response', models.JSONField()),
                ('action', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paystack_subscription', to='bills.action')),
                ('card', models.ForeignKey(help_text='NULL means the card used for this transaction has been deleted on Halver. Check full paystack data for card details.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paystack_subscriptions', to='financials.usercard')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paystack_subscriptions', to='financials.paystackplan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paystack_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paystack Subscription',
                'verbose_name_plural': 'Paystack Subscriptions',
                'ordering': ['-created', 'user'],
            },
        ),
    ]
