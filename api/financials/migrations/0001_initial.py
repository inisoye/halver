# Generated by Django 4.1.4 on 2023-03-24 09:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('bills', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaystackPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Public identifier')),
                ('name', models.CharField(max_length=200)),
                ('interval', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('biannually', 'Biannually'), ('annually', 'Annually')], max_length=50)),
                ('plan_code', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=4, help_text="Amount to be paid within each interval, in kobo (or other subunit), according to Paystack's standard approach.", max_digits=19, verbose_name='Amount in Kobo or other subunit')),
                ('amount_in_naira', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('complete_paystack_payload', models.JSONField(editable=False, null=True)),
                ('complete_paystack_response', models.JSONField(editable=False)),
                ('action', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='paystack_plan', to='bills.billaction')),
                ('participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paystack_plans', to=settings.AUTH_USER_MODEL)),
                ('unregistered_participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paystack_plans', to='bills.billunregisteredparticipant')),
            ],
            options={
                'verbose_name': 'Paystack plan',
                'verbose_name_plural': 'Paystack plans',
            },
        ),
        migrations.CreateModel(
            name='UserCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Public identifier')),
                ('authorization_code', models.CharField(max_length=100)),
                ('first_6', models.CharField(max_length=10, verbose_name="Card's first 6 digits (bin)")),
                ('last_4', models.CharField(max_length=4, verbose_name="Card's last 4 digits")),
                ('exp_month', models.CharField(max_length=10)),
                ('exp_year', models.CharField(max_length=10)),
                ('channel', models.CharField(max_length=10)),
                ('card_type', models.CharField(max_length=10)),
                ('bank', models.CharField(max_length=100)),
                ('country_code', models.CharField(max_length=2, verbose_name='Country where card was issued')),
                ('brand', models.CharField(max_length=100)),
                ('reusable', models.BooleanField()),
                ('signature', models.CharField(max_length=100, unique=True)),
                ('account_name', models.CharField(max_length=100, null=True)),
                ('email', models.CharField(max_length=100, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('complete_paystack_response', models.JSONField(editable=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User card',
                'verbose_name_plural': 'User cards',
            },
        ),
        migrations.CreateModel(
            name='TransferRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Public identifier')),
                ('is_default', models.BooleanField(default=False)),
                ('recipient_code', models.CharField(max_length=100, unique=True)),
                ('recipient_type', models.CharField(choices=[('authorization', 'Card'), ('nuban', 'Bank account')], max_length=50)),
                ('name', models.CharField(max_length=100)),
                ('account_number', models.CharField(blank=True, max_length=10, null=True)),
                ('bank_code', models.CharField(blank=True, max_length=5, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('authorization_code', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('complete_paystack_response', models.JSONField(editable=False)),
                ('associated_card', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='associated_transfer_recipient', to='financials.usercard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_recipients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User transfer recipient',
                'verbose_name_plural': 'User transfer recipients',
            },
        ),
        migrations.CreateModel(
            name='PaystackTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Public identifier')),
                ('amount', models.DecimalField(decimal_places=4, help_text='Amount returned by Paystack, in Kobo (or other subunit)', max_digits=19, verbose_name='Amount in Kobo or other subunit')),
                ('amount_in_naira', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('paystack_transfer_reference', models.UUIDField(editable=False, unique=True, verbose_name='Public identifier')),
                ('transfer_outcome', models.CharField(choices=[('successful', 'Successful'), ('failed', 'Failed'), ('reversed', 'Reversed')], max_length=50)),
                ('transfer_type', models.CharField(choices=[('creditor_settlement', 'Creditor settlement'), ('arrear_settlement', 'Arrear settlement'), ('card_addition_refund', 'Card addition refund')], max_length=50)),
                ('complete_paystack_response', models.JSONField(editable=False)),
                ('action', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transfers', to='bills.billaction')),
                ('arrear', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transfer', to='bills.billarrear')),
                ('receiving_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transfers_received', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(help_text='NULL means the recipient who received this transfer has been deleted on Halver. Check full paystack data for recipient details.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transfers_received', to='financials.transferrecipient')),
            ],
            options={
                'verbose_name': 'Paystack transfer',
                'verbose_name_plural': 'Paystack transfers',
            },
        ),
        migrations.CreateModel(
            name='PaystackTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Public identifier')),
                ('amount', models.DecimalField(decimal_places=4, help_text='Amount returned by Paystack, in Kobo (or other subunit)', max_digits=19, verbose_name='Amount in Kobo or other subunit')),
                ('amount_in_naira', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('refundable_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('transaction_outcome', models.CharField(choices=[('successful', 'Successful'), ('failed', 'Failed')], max_length=50)),
                ('transaction_type', models.CharField(choices=[('one_time_contribution', 'One-time contribution'), ('arrear_contribution', 'Arrear contribution'), ('subscription_contribution', 'Subscription contribution'), ('card_addition', 'Card addition')], max_length=50)),
                ('paystack_transaction_id', models.BigIntegerField()),
                ('paystack_transaction_reference', models.CharField(max_length=100)),
                ('complete_paystack_response', models.JSONField(editable=False)),
                ('action', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transactions', to='bills.billaction')),
                ('arrear', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transaction', to='bills.billarrear')),
                ('card', models.ForeignKey(help_text='NULL means the card used for this transaction has been deleted on Halver. Check full paystack data for card details.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transactions', to='financials.usercard')),
                ('paying_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paystack_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paystack transaction',
                'verbose_name_plural': 'Paystack transactions',
            },
        ),
        migrations.CreateModel(
            name='PaystackSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Public identifier')),
                ('status', models.CharField(choices=[('active', 'Active'), ('non-renewing', 'Non-renewing'), ('attention', 'Attention'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], max_length=50)),
                ('start_date', models.DateTimeField()),
                ('next_payment_date', models.DateTimeField()),
                ('paystack_subscription_code', models.CharField(max_length=100)),
                ('paystack_email_token', models.CharField(max_length=100)),
                ('complete_paystack_response', models.JSONField(editable=False)),
                ('action', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='paystack_subscription', to='bills.billaction')),
                ('card', models.ForeignKey(help_text='NULL means the card used for this transaction has been deleted on Halver. Check full paystack data for card details.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='paystack_subscriptions', to='financials.usercard')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paystack_subscriptions', to=settings.AUTH_USER_MODEL)),
                ('plan', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='paystack_subscription', to='financials.paystackplan')),
            ],
            options={
                'verbose_name': 'Paystack subscription',
                'verbose_name_plural': 'Paystack subscriptions',
            },
        ),
        migrations.CreateModel(
            name='PaystackPlanFailure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Public identifier')),
                ('failure_message', models.CharField(max_length=150)),
                ('action', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='paystack_plan_failure', to='bills.billaction')),
                ('participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paystack_plan_failures', to=settings.AUTH_USER_MODEL)),
                ('unregistered_participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paystack_plan_failures', to='bills.billunregisteredparticipant')),
            ],
            options={
                'verbose_name': 'Paystack plan failure',
                'verbose_name_plural': 'Paystack plan failures',
            },
        ),
        migrations.AddIndex(
            model_name='usercard',
            index=models.Index(fields=['signature'], name='financials__signatu_81870e_idx'),
        ),
        migrations.AddIndex(
            model_name='transferrecipient',
            index=models.Index(fields=['recipient_code'], name='financials__recipie_d344a2_idx'),
        ),
    ]
