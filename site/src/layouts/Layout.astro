---
import '../styles/global.css'
import * as colors from '../theme/colors'

interface Props {
  title: string
}

interface ColorsModule {
  [key: string]: {
    [key: string]: string
  }
}

const { title } = Astro.props

const flattenedColors: { [key: string]: string } = {}

for (const key in colors) {
  for (const innerKey in (colors as ColorsModule)[key]) {
    const flatKey = `${key}-${innerKey}`
    flattenedColors[flatKey] = (colors as ColorsModule)[key][innerKey]
  }
}
---

<!doctype html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta
      name='description'
      content='Halver helps you split one-time payments and subscriptions with ease.'
    />
    <meta name='viewport' content='width=device-width' />

    <link rel='apple-touch-icon' sizes='180x180' href='/apple-touch-icon.png' />
    <link rel='icon' type='image/png' sizes='32x32' href='/favicon-32x32.png' />
    <link rel='icon' type='image/png' sizes='16x16' href='/favicon-16x16.png' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <link rel='manifest' href='/site.webmanifest' />
    <link rel='mask-icon' href='/safari-pinned-tab.svg' color='#315d65' />
    <meta name='msapplication-TileColor' content='#161616' />
    <meta name='theme-color' content='#161616' />

    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
  </head>

  <body>
    <slot />
  </body>
</html>

<style is:global define:vars={flattenedColors}></style>
